version: '3.8'

services:
  # Frontend React en production
  bank-frontend:
    image: ${DOCKER_USERNAME:-katekate7}/bank-frontend:${TAG:-latest}
    restart: unless-stopped
    ports:
      - "80:4173"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`bank.example.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"

  # Backend Symfony en production  
  bank-backend:
    image: ${DOCKER_USERNAME:-katekate7}/bank-backend:${TAG:-latest}
    restart: unless-stopped
    ports:
      - "8000:80"
    environment:
      - APP_ENV=prod
      - APP_SECRET=${APP_SECRET:-prod_secret_key_change_me}
      - DATABASE_URL=mysql://root:${MYSQL_ROOT_PASSWORD:-root}@mysql:3306/${MYSQL_DATABASE:-bank_prod}?serverVersion=8.0
      - JWT_SECRET=${JWT_SECRET:-jwt_secret_key_change_me}
      - JWT_PASSPHRASE=${JWT_PASSPHRASE:-jwt_passphrase_change_me}
      - CORS_ALLOW_ORIGIN=^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.bank.example.com`)"
      - "traefik.http.routers.backend.entrypoints=web"

  # Base de données MySQL production
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-bank_prod}
      MYSQL_USER: ${MYSQL_USER:-bank_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-bank_password}
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./bank-backend/docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      timeout: 20s
      retries: 10
      interval: 10s

  # Interface d'administration de base de données (optionnel en production)
  adminer:
    image: adminer:4.8.1
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - app-network
    depends_on:
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.bank.example.com`)"
      - "traefik.http.routers.adminer.entrypoints=web"

  # Reverse proxy Traefik (optionnel)
  traefik:
    image: traefik:v2.9
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"  # Dashboard Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_prod_data:
    driver: local
