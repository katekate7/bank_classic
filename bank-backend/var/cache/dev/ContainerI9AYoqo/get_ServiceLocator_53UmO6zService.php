<?php

namespace ContainerI9AYoqo;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_53UmO6zService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.53UmO6z' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.53UmO6z'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\ApiExpenseController::create' => ['privates', '.service_locator.wXxajRq', 'get_ServiceLocator_WXxajRqService', true],
            'App\\Controller\\ApiExpenseController::delete' => ['privates', '.service_locator.R3QIa2E', 'get_ServiceLocator_R3QIa2EService', true],
            'App\\Controller\\ApiExpenseController::getExpense' => ['privates', '.service_locator.BWLti1t', 'get_ServiceLocator_BWLti1tService', true],
            'App\\Controller\\ApiExpenseController::list' => ['privates', '.service_locator.sEPVugo', 'get_ServiceLocator_SEPVugoService', true],
            'App\\Controller\\ApiExpenseController::update' => ['privates', '.service_locator.GZ8xLkz', 'get_ServiceLocator_GZ8xLkzService', true],
            'App\\Controller\\ApiRegistrationController::register' => ['privates', '.service_locator.IocqDQz', 'get_ServiceLocator_IocqDQzService', true],
            'App\\Controller\\CategoryController::list' => ['privates', '.service_locator.RdVbGrJ', 'get_ServiceLocator_RdVbGrJService', true],
            'App\\Controller\\ProfileController::edit' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.YU8H6ve', 'get_ServiceLocator_YU8H6veService', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserExpenseController::delete' => ['privates', '.service_locator.pKgXV9m', 'get_ServiceLocator_PKgXV9mService', true],
            'App\\Controller\\UserExpenseController::edit' => ['privates', '.service_locator.pKgXV9m', 'get_ServiceLocator_PKgXV9mService', true],
            'App\\Controller\\UserExpenseController::index' => ['privates', '.service_locator.7YE0eMO', 'get_ServiceLocator_7YE0eMOService', true],
            'App\\Controller\\UserExpenseController::new' => ['privates', '.service_locator.t6i3vFk', 'get_ServiceLocator_T6i3vFkService', true],
            'App\\Controller\\UserExpenseController::show' => ['privates', '.service_locator.BWLti1t', 'get_ServiceLocator_BWLti1tService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\ApiExpenseController:create' => ['privates', '.service_locator.wXxajRq', 'get_ServiceLocator_WXxajRqService', true],
            'App\\Controller\\ApiExpenseController:delete' => ['privates', '.service_locator.R3QIa2E', 'get_ServiceLocator_R3QIa2EService', true],
            'App\\Controller\\ApiExpenseController:getExpense' => ['privates', '.service_locator.BWLti1t', 'get_ServiceLocator_BWLti1tService', true],
            'App\\Controller\\ApiExpenseController:list' => ['privates', '.service_locator.sEPVugo', 'get_ServiceLocator_SEPVugoService', true],
            'App\\Controller\\ApiExpenseController:update' => ['privates', '.service_locator.GZ8xLkz', 'get_ServiceLocator_GZ8xLkzService', true],
            'App\\Controller\\ApiRegistrationController:register' => ['privates', '.service_locator.IocqDQz', 'get_ServiceLocator_IocqDQzService', true],
            'App\\Controller\\CategoryController:list' => ['privates', '.service_locator.RdVbGrJ', 'get_ServiceLocator_RdVbGrJService', true],
            'App\\Controller\\ProfileController:edit' => ['privates', '.service_locator.aKM6MDa', 'get_ServiceLocator_AKM6MDaService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.YU8H6ve', 'get_ServiceLocator_YU8H6veService', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserExpenseController:delete' => ['privates', '.service_locator.pKgXV9m', 'get_ServiceLocator_PKgXV9mService', true],
            'App\\Controller\\UserExpenseController:edit' => ['privates', '.service_locator.pKgXV9m', 'get_ServiceLocator_PKgXV9mService', true],
            'App\\Controller\\UserExpenseController:index' => ['privates', '.service_locator.7YE0eMO', 'get_ServiceLocator_7YE0eMOService', true],
            'App\\Controller\\UserExpenseController:new' => ['privates', '.service_locator.t6i3vFk', 'get_ServiceLocator_T6i3vFkService', true],
            'App\\Controller\\UserExpenseController:show' => ['privates', '.service_locator.BWLti1t', 'get_ServiceLocator_BWLti1tService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\ApiExpenseController::create' => '?',
            'App\\Controller\\ApiExpenseController::delete' => '?',
            'App\\Controller\\ApiExpenseController::getExpense' => '?',
            'App\\Controller\\ApiExpenseController::list' => '?',
            'App\\Controller\\ApiExpenseController::update' => '?',
            'App\\Controller\\ApiRegistrationController::register' => '?',
            'App\\Controller\\CategoryController::list' => '?',
            'App\\Controller\\ProfileController::edit' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Controller\\UserExpenseController::delete' => '?',
            'App\\Controller\\UserExpenseController::edit' => '?',
            'App\\Controller\\UserExpenseController::index' => '?',
            'App\\Controller\\UserExpenseController::new' => '?',
            'App\\Controller\\UserExpenseController::show' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\ApiExpenseController:create' => '?',
            'App\\Controller\\ApiExpenseController:delete' => '?',
            'App\\Controller\\ApiExpenseController:getExpense' => '?',
            'App\\Controller\\ApiExpenseController:list' => '?',
            'App\\Controller\\ApiExpenseController:update' => '?',
            'App\\Controller\\ApiRegistrationController:register' => '?',
            'App\\Controller\\CategoryController:list' => '?',
            'App\\Controller\\ProfileController:edit' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'App\\Controller\\UserExpenseController:delete' => '?',
            'App\\Controller\\UserExpenseController:edit' => '?',
            'App\\Controller\\UserExpenseController:index' => '?',
            'App\\Controller\\UserExpenseController:new' => '?',
            'App\\Controller\\UserExpenseController:show' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
